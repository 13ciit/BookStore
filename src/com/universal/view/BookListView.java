package com.universal.view;


import com.sun.jndi.toolkit.dir.SearchFilter;
import com.universal.model.BookListModel;
import com.universal.common.CommonToolClass;
import com.universal.model.Book;
import com.universal.model.BookTableModel;
import com.universal.myutil.MyCollections;
import java.awt.event.KeyAdapter;
import java.util.ArrayList;
import java.awt.event.KeyListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTextField;


public class BookListView extends javax.swing.JFrame {
        JTextField searchArea;

  
    public BookListView() {
        searchField();
        initComponents();
                setLocationRelativeTo(this);

       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        printById = new javax.swing.JButton();
        print = new javax.swing.JButton();
        printByName = new javax.swing.JButton();
        printByPrice = new javax.swing.JButton();
        searchButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        bookTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        printById.setText("PrintById");
        printById.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printByIdActionPerformed(evt);
            }
        });

        print.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        print.setText("print");
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printActionPerformed(evt);
            }
        });

        printByName.setText("printByName");
        printByName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printByNameActionPerformed(evt);
            }
        });

        printByPrice.setText("PrintByPrice");
        printByPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printByPriceActionPerformed(evt);
            }
        });

        searchButton.setText("SEARCH HERE");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        bookTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(bookTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(print, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(152, 152, 152)
                        .addComponent(printById, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 195, Short.MAX_VALUE)
                        .addComponent(printByName)
                        .addGap(154, 154, 154)
                        .addComponent(printByPrice))
                    .addComponent(jScrollPane3))
                .addGap(78, 78, 78))
            .addGroup(layout.createSequentialGroup()
                .addGap(113, 113, 113)
                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(print)
                    .addComponent(printById)
                    .addComponent(printByName)
                    .addComponent(printByPrice))
                .addGap(60, 60, 60))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printActionPerformed
            try {
                // TODO add your handling code here:
                ArrayList<Book>bkList=new ArrayList();
                
                bkList=MyCollections.print(CommonToolClass.getOriginalBookList());
                // BookListModel m=new BookListModel(bkList);
                
                //bookList.setModel(m); 
                BookTableModel tm=new BookTableModel(bkList);
                bookTable.setModel(tm);
            } catch (SQLException ex) {
                Logger.getLogger(BookListView.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_printActionPerformed

    private void printByIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printByIdActionPerformed
            try {
                ArrayList<Book>bkList=new ArrayList();
                
                bkList=MyCollections.printById(CommonToolClass.getOriginalBookList());
                //BookListModel m=new BookListModel(bkList);
                
                //bookList.setModel(m);
                BookTableModel tm=new BookTableModel(bkList);
                bookTable.setModel(tm);
            } catch (SQLException ex) {
                Logger.getLogger(BookListView.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_printByIdActionPerformed

    private void printByNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printByNameActionPerformed
            try {
                ArrayList<Book>bkList=new ArrayList();
                
                bkList=MyCollections.printByName(CommonToolClass.getOriginalBookList());
                // BookListModel m=new BookListModel(bkList);
                
                //bookList.setModel(m); 
                BookTableModel tm=new BookTableModel(bkList);
                bookTable.setModel(tm);
            } catch (SQLException ex) {
                Logger.getLogger(BookListView.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_printByNameActionPerformed

    private void printByPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printByPriceActionPerformed
            try {
                ArrayList<Book>bkList=new ArrayList();
                
                bkList=MyCollections.printByPrice(CommonToolClass.getOriginalBookList());
                //BookListModel m=new BookListModel(bkList);
                
                //bookList.setModel(m);
                BookTableModel tm=new BookTableModel(bkList);
                bookTable.setModel(tm);
            } catch (SQLException ex) {
                Logger.getLogger(BookListView.class.getName()).log(Level.SEVERE, null, ex);
            }
               
    }//GEN-LAST:event_printByPriceActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed

        
   public void searchField() {    
       searchArea=new JTextField();
       searchArea.setBounds(300, 30,200, 40);
       add(searchArea);
       searchArea.addKeyListener(new KeyAdapter() {
           @Override
           public void keyPressed(KeyEvent e) {
 
               //super.keyPressed(e); //To change body of generated methods, choose Tools | Templates.
           }

           @Override
           public void keyReleased(KeyEvent e) {
               try {
                   String searchedContent=searchArea.getText();
                   
                   
                   ArrayList <Book>boklist=CommonToolClass.getOriginalBookList();
                   
                   for(Book bokk:boklist)
                   {
                       if (searchedContent.valueOf(bokk.getBookId()).startsWith(searchedContent))
                       {
                           
                           ArrayList <Book>matchedData=new ArrayList();
                           
                           matchedData.add(bokk);
                           
                           //BookListModel model=new BookListModel(matchedData);
                           //bookList.setModel(model);
                           BookTableModel model=new BookTableModel(matchedData);
                           bookTable.setModel(model);
                           
                           
                           
                       }
                       
                       
                       else if (bokk.getBookName().startsWith(searchedContent.toUpperCase()))
                       {
                           
                           ArrayList <Book>matchedData=new ArrayList();
                           matchedData.add(bokk);
                           // BookListModel model=new BookListModel(matchedData);
                           //bookList.setModel(model);
                           BookTableModel model=new BookTableModel(matchedData);
                           bookTable.setModel(model);
                           
                           
                       }
                       
                       
                       
                       
                   }
                   super.keyReleased(e); //To change body of generated methods, choose Tools | Templates.
               } catch (SQLException ex) {
                   Logger.getLogger(BookListView.class.getName()).log(Level.SEVERE, null, ex);
               }
           }

           @Override
           public void keyTyped(KeyEvent e) {
               super.keyTyped(e); //To change body of generated methods, choose Tools | Templates.
           }
           
           
});
  
      
    
   }
   

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookListView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookListView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookListView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookListView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */

        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookListView().setVisible(true);
              //  new BookListView().setLocationRelativeTo(this);
                       
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable bookTable;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton print;
    private javax.swing.JButton printById;
    private javax.swing.JButton printByName;
    private javax.swing.JButton printByPrice;
    private javax.swing.JButton searchButton;
    // End of variables declaration//GEN-END:variables


 
}